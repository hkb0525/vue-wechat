{
  "version": 3,
  "sources": ["browser-external:node:path", "browser-external:node:url", "browser-external:node:module", "browser-external:os", "../../resolve/lib/homedir.js", "../../resolve/lib/caller.js", "../../path-parse/index.js", "../../resolve/lib/node-modules-paths.js", "../../resolve/lib/normalize-options.js", "../../function-bind/implementation.js", "../../function-bind/index.js", "../../has/src/index.js", "../../is-core-module/index.js", "../../resolve/lib/async.js", "../../resolve/lib/core.js", "../../resolve/lib/is-core.js", "../../resolve/lib/sync.js", "../../resolve/index.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:path\" has been externalized for browser compatibility. Cannot access \"node:path.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:url\" has been externalized for browser compatibility. Cannot access \"node:url.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:module\" has been externalized for browser compatibility. Cannot access \"node:module.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code.`)\n    }\n  }\n}))", "'use strict';\r\n\r\nvar os = require('os');\r\n\r\n// adapted from https://github.com/sindresorhus/os-homedir/blob/11e089f4754db38bb535e5a8416320c4446e8cfd/index.js\r\n\r\nmodule.exports = os.homedir || function homedir() {\r\n    var home = process.env.HOME;\r\n    var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\r\n\r\n    if (process.platform === 'win32') {\r\n        return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;\r\n    }\r\n\r\n    if (process.platform === 'darwin') {\r\n        return home || (user ? '/Users/' + user : null);\r\n    }\r\n\r\n    if (process.platform === 'linux') {\r\n        return home || (process.getuid() === 0 ? '/root' : (user ? '/home/' + user : null)); // eslint-disable-line no-extra-parens\r\n    }\r\n\r\n    return home || null;\r\n};\r\n", "module.exports = function () {\r\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\r\n    var origPrepareStackTrace = Error.prepareStackTrace;\r\n    Error.prepareStackTrace = function (_, stack) { return stack; };\r\n    var stack = (new Error()).stack;\r\n    Error.prepareStackTrace = origPrepareStackTrace;\r\n    return stack[2].getFileName();\r\n};\r\n", "'use strict';\r\n\r\nvar isWindows = process.platform === 'win32';\r\n\r\n// Regex to split a windows path into into [dir, root, basename, name, ext]\r\nvar splitWindowsRe =\r\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\r\n\r\nvar win32 = {};\r\n\r\nfunction win32SplitPath(filename) {\r\n  return splitWindowsRe.exec(filename).slice(1);\r\n}\r\n\r\nwin32.parse = function(pathString) {\r\n  if (typeof pathString !== 'string') {\r\n    throw new TypeError(\r\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\r\n    );\r\n  }\r\n  var allParts = win32SplitPath(pathString);\r\n  if (!allParts || allParts.length !== 5) {\r\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\r\n  }\r\n  return {\r\n    root: allParts[1],\r\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\r\n    base: allParts[2],\r\n    ext: allParts[4],\r\n    name: allParts[3]\r\n  };\r\n};\r\n\r\n\r\n\r\n// Split a filename into [dir, root, basename, name, ext], unix version\r\n// 'root' is just a slash, or nothing.\r\nvar splitPathRe =\r\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\r\nvar posix = {};\r\n\r\n\r\nfunction posixSplitPath(filename) {\r\n  return splitPathRe.exec(filename).slice(1);\r\n}\r\n\r\n\r\nposix.parse = function(pathString) {\r\n  if (typeof pathString !== 'string') {\r\n    throw new TypeError(\r\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\r\n    );\r\n  }\r\n  var allParts = posixSplitPath(pathString);\r\n  if (!allParts || allParts.length !== 5) {\r\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\r\n  }\r\n  \r\n  return {\r\n    root: allParts[1],\r\n    dir: allParts[0].slice(0, -1),\r\n    base: allParts[2],\r\n    ext: allParts[4],\r\n    name: allParts[3],\r\n  };\r\n};\r\n\r\n\r\nif (isWindows)\r\n  module.exports = win32.parse;\r\nelse /* posix */\r\n  module.exports = posix.parse;\r\n\r\nmodule.exports.posix = posix.parse;\r\nmodule.exports.win32 = win32.parse;\r\n", "var path = require('path');\r\nvar parse = path.parse || require('path-parse'); // eslint-disable-line global-require\r\n\r\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\r\n    var prefix = '/';\r\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\r\n        prefix = '';\r\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\r\n        prefix = '\\\\\\\\';\r\n    }\r\n\r\n    var paths = [absoluteStart];\r\n    var parsed = parse(absoluteStart);\r\n    while (parsed.dir !== paths[paths.length - 1]) {\r\n        paths.push(parsed.dir);\r\n        parsed = parse(parsed.dir);\r\n    }\r\n\r\n    return paths.reduce(function (dirs, aPath) {\r\n        return dirs.concat(modules.map(function (moduleDir) {\r\n            return path.resolve(prefix, aPath, moduleDir);\r\n        }));\r\n    }, []);\r\n};\r\n\r\nmodule.exports = function nodeModulesPaths(start, opts, request) {\r\n    var modules = opts && opts.moduleDirectory\r\n        ? [].concat(opts.moduleDirectory)\r\n        : ['node_modules'];\r\n\r\n    if (opts && typeof opts.paths === 'function') {\r\n        return opts.paths(\r\n            request,\r\n            start,\r\n            function () { return getNodeModulesDirs(start, modules); },\r\n            opts\r\n        );\r\n    }\r\n\r\n    var dirs = getNodeModulesDirs(start, modules);\r\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\r\n};\r\n", "module.exports = function (x, opts) {\r\n    /**\r\n     * This file is purposefully a passthrough. It's expected that third-party\r\n     * environments will override it at runtime in order to inject special logic\r\n     * into `resolve` (by manipulating the options). One such example is the PnP\r\n     * code path in Yarn.\r\n     */\r\n\r\n    return opts || {};\r\n};\r\n", "'use strict';\r\n\r\n/* eslint no-invalid-this: 1 */\r\n\r\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\r\nvar slice = Array.prototype.slice;\r\nvar toStr = Object.prototype.toString;\r\nvar funcType = '[object Function]';\r\n\r\nmodule.exports = function bind(that) {\r\n    var target = this;\r\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\r\n        throw new TypeError(ERROR_MESSAGE + target);\r\n    }\r\n    var args = slice.call(arguments, 1);\r\n\r\n    var bound;\r\n    var binder = function () {\r\n        if (this instanceof bound) {\r\n            var result = target.apply(\r\n                this,\r\n                args.concat(slice.call(arguments))\r\n            );\r\n            if (Object(result) === result) {\r\n                return result;\r\n            }\r\n            return this;\r\n        } else {\r\n            return target.apply(\r\n                that,\r\n                args.concat(slice.call(arguments))\r\n            );\r\n        }\r\n    };\r\n\r\n    var boundLength = Math.max(0, target.length - args.length);\r\n    var boundArgs = [];\r\n    for (var i = 0; i < boundLength; i++) {\r\n        boundArgs.push('$' + i);\r\n    }\r\n\r\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\r\n\r\n    if (target.prototype) {\r\n        var Empty = function Empty() {};\r\n        Empty.prototype = target.prototype;\r\n        bound.prototype = new Empty();\r\n        Empty.prototype = null;\r\n    }\r\n\r\n    return bound;\r\n};\r\n", "'use strict';\r\n\r\nvar implementation = require('./implementation');\r\n\r\nmodule.exports = Function.prototype.bind || implementation;\r\n", "'use strict';\r\n\r\nvar bind = require('function-bind');\r\n\r\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\r\n", "'use strict';\r\n\r\nvar has = require('has');\r\n\r\nfunction specifierIncluded(current, specifier) {\r\n\tvar nodeParts = current.split('.');\r\n\tvar parts = specifier.split(' ');\r\n\tvar op = parts.length > 1 ? parts[0] : '=';\r\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\r\n\r\n\tfor (var i = 0; i < 3; ++i) {\r\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\r\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\r\n\t\tif (cur === ver) {\r\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\r\n\t\t}\r\n\t\tif (op === '<') {\r\n\t\t\treturn cur < ver;\r\n\t\t}\r\n\t\tif (op === '>=') {\r\n\t\t\treturn cur >= ver;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treturn op === '>=';\r\n}\r\n\r\nfunction matchesRange(current, range) {\r\n\tvar specifiers = range.split(/ ?&& ?/);\r\n\tif (specifiers.length === 0) {\r\n\t\treturn false;\r\n\t}\r\n\tfor (var i = 0; i < specifiers.length; ++i) {\r\n\t\tif (!specifierIncluded(current, specifiers[i])) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction versionIncluded(nodeVersion, specifierValue) {\r\n\tif (typeof specifierValue === 'boolean') {\r\n\t\treturn specifierValue;\r\n\t}\r\n\r\n\tvar current = typeof nodeVersion === 'undefined'\r\n\t\t? process.versions && process.versions.node\r\n\t\t: nodeVersion;\r\n\r\n\tif (typeof current !== 'string') {\r\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\r\n\t}\r\n\r\n\tif (specifierValue && typeof specifierValue === 'object') {\r\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\r\n\t\t\tif (matchesRange(current, specifierValue[i])) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treturn matchesRange(current, specifierValue);\r\n}\r\n\r\nvar data = require('./core.json');\r\n\r\nmodule.exports = function isCore(x, nodeVersion) {\r\n\treturn has(data, x) && versionIncluded(nodeVersion, data[x]);\r\n};\r\n", "var fs = require('fs');\r\nvar getHomedir = require('./homedir');\r\nvar path = require('path');\r\nvar caller = require('./caller');\r\nvar nodeModulesPaths = require('./node-modules-paths');\r\nvar normalizeOptions = require('./normalize-options');\r\nvar isCore = require('is-core-module');\r\n\r\nvar realpathFS = process.platform !== 'win32' && fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\r\n\r\nvar homedir = getHomedir();\r\nvar defaultPaths = function () {\r\n    return [\r\n        path.join(homedir, '.node_modules'),\r\n        path.join(homedir, '.node_libraries')\r\n    ];\r\n};\r\n\r\nvar defaultIsFile = function isFile(file, cb) {\r\n    fs.stat(file, function (err, stat) {\r\n        if (!err) {\r\n            return cb(null, stat.isFile() || stat.isFIFO());\r\n        }\r\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\r\n        return cb(err);\r\n    });\r\n};\r\n\r\nvar defaultIsDir = function isDirectory(dir, cb) {\r\n    fs.stat(dir, function (err, stat) {\r\n        if (!err) {\r\n            return cb(null, stat.isDirectory());\r\n        }\r\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\r\n        return cb(err);\r\n    });\r\n};\r\n\r\nvar defaultRealpath = function realpath(x, cb) {\r\n    realpathFS(x, function (realpathErr, realPath) {\r\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\r\n        else cb(null, realpathErr ? x : realPath);\r\n    });\r\n};\r\n\r\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\r\n    if (opts && opts.preserveSymlinks === false) {\r\n        realpath(x, cb);\r\n    } else {\r\n        cb(null, x);\r\n    }\r\n};\r\n\r\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\r\n    readFile(pkgfile, function (readFileErr, body) {\r\n        if (readFileErr) cb(readFileErr);\r\n        else {\r\n            try {\r\n                var pkg = JSON.parse(body);\r\n                cb(null, pkg);\r\n            } catch (jsonErr) {\r\n                cb(null);\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\r\n    var dirs = nodeModulesPaths(start, opts, x);\r\n    for (var i = 0; i < dirs.length; i++) {\r\n        dirs[i] = path.join(dirs[i], x);\r\n    }\r\n    return dirs;\r\n};\r\n\r\nmodule.exports = function resolve(x, options, callback) {\r\n    var cb = callback;\r\n    var opts = options;\r\n    if (typeof options === 'function') {\r\n        cb = opts;\r\n        opts = {};\r\n    }\r\n    if (typeof x !== 'string') {\r\n        var err = new TypeError('Path must be a string.');\r\n        return process.nextTick(function () {\r\n            cb(err);\r\n        });\r\n    }\r\n\r\n    opts = normalizeOptions(x, opts);\r\n\r\n    var isFile = opts.isFile || defaultIsFile;\r\n    var isDirectory = opts.isDirectory || defaultIsDir;\r\n    var readFile = opts.readFile || fs.readFile;\r\n    var realpath = opts.realpath || defaultRealpath;\r\n    var readPackage = opts.readPackage || defaultReadPackage;\r\n    if (opts.readFile && opts.readPackage) {\r\n        var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\r\n        return process.nextTick(function () {\r\n            cb(conflictErr);\r\n        });\r\n    }\r\n    var packageIterator = opts.packageIterator;\r\n\r\n    var extensions = opts.extensions || ['.js'];\r\n    var includeCoreModules = opts.includeCoreModules !== false;\r\n    var basedir = opts.basedir || path.dirname(caller());\r\n    var parent = opts.filename || basedir;\r\n\r\n    opts.paths = opts.paths || defaultPaths();\r\n\r\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\r\n    var absoluteStart = path.resolve(basedir);\r\n\r\n    maybeRealpath(\r\n        realpath,\r\n        absoluteStart,\r\n        opts,\r\n        function (err, realStart) {\r\n            if (err) cb(err);\r\n            else init(realStart);\r\n        }\r\n    );\r\n\r\n    var res;\r\n    function init(basedir) {\r\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\r\n            res = path.resolve(basedir, x);\r\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\r\n            if ((/\\/$/).test(x) && res === basedir) {\r\n                loadAsDirectory(res, opts.package, onfile);\r\n            } else loadAsFile(res, opts.package, onfile);\r\n        } else if (includeCoreModules && isCore(x)) {\r\n            return cb(null, x);\r\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\r\n            if (err) cb(err);\r\n            else if (n) {\r\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\r\n                    if (err) {\r\n                        cb(err);\r\n                    } else {\r\n                        cb(null, realN, pkg);\r\n                    }\r\n                });\r\n            } else {\r\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\r\n                moduleError.code = 'MODULE_NOT_FOUND';\r\n                cb(moduleError);\r\n            }\r\n        });\r\n    }\r\n\r\n    function onfile(err, m, pkg) {\r\n        if (err) cb(err);\r\n        else if (m) cb(null, m, pkg);\r\n        else loadAsDirectory(res, function (err, d, pkg) {\r\n            if (err) cb(err);\r\n            else if (d) {\r\n                maybeRealpath(realpath, d, opts, function (err, realD) {\r\n                    if (err) {\r\n                        cb(err);\r\n                    } else {\r\n                        cb(null, realD, pkg);\r\n                    }\r\n                });\r\n            } else {\r\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\r\n                moduleError.code = 'MODULE_NOT_FOUND';\r\n                cb(moduleError);\r\n            }\r\n        });\r\n    }\r\n\r\n    function loadAsFile(x, thePackage, callback) {\r\n        var loadAsFilePackage = thePackage;\r\n        var cb = callback;\r\n        if (typeof loadAsFilePackage === 'function') {\r\n            cb = loadAsFilePackage;\r\n            loadAsFilePackage = undefined;\r\n        }\r\n\r\n        var exts = [''].concat(extensions);\r\n        load(exts, x, loadAsFilePackage);\r\n\r\n        function load(exts, x, loadPackage) {\r\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\r\n            var file = x + exts[0];\r\n\r\n            var pkg = loadPackage;\r\n            if (pkg) onpkg(null, pkg);\r\n            else loadpkg(path.dirname(file), onpkg);\r\n\r\n            function onpkg(err, pkg_, dir) {\r\n                pkg = pkg_;\r\n                if (err) return cb(err);\r\n                if (dir && pkg && opts.pathFilter) {\r\n                    var rfile = path.relative(dir, file);\r\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\r\n                    var r = opts.pathFilter(pkg, x, rel);\r\n                    if (r) return load(\r\n                        [''].concat(extensions.slice()),\r\n                        path.resolve(dir, r),\r\n                        pkg\r\n                    );\r\n                }\r\n                isFile(file, onex);\r\n            }\r\n            function onex(err, ex) {\r\n                if (err) return cb(err);\r\n                if (ex) return cb(null, file, pkg);\r\n                load(exts.slice(1), x, pkg);\r\n            }\r\n        }\r\n    }\r\n\r\n    function loadpkg(dir, cb) {\r\n        if (dir === '' || dir === '/') return cb(null);\r\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\r\n            return cb(null);\r\n        }\r\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\r\n\r\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\r\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\r\n            var pkgfile = path.join(pkgdir, 'package.json');\r\n            isFile(pkgfile, function (err, ex) {\r\n                // on err, ex is false\r\n                if (!ex) return loadpkg(path.dirname(dir), cb);\r\n\r\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\r\n                    if (err) cb(err);\r\n\r\n                    var pkg = pkgParam;\r\n\r\n                    if (pkg && opts.packageFilter) {\r\n                        pkg = opts.packageFilter(pkg, pkgfile);\r\n                    }\r\n                    cb(null, pkg, dir);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\r\n        var cb = callback;\r\n        var fpkg = loadAsDirectoryPackage;\r\n        if (typeof fpkg === 'function') {\r\n            cb = fpkg;\r\n            fpkg = opts.package;\r\n        }\r\n\r\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\r\n            if (unwrapErr) return cb(unwrapErr);\r\n            var pkgfile = path.join(pkgdir, 'package.json');\r\n            isFile(pkgfile, function (err, ex) {\r\n                if (err) return cb(err);\r\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\r\n\r\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\r\n                    if (err) return cb(err);\r\n\r\n                    var pkg = pkgParam;\r\n\r\n                    if (pkg && opts.packageFilter) {\r\n                        pkg = opts.packageFilter(pkg, pkgfile);\r\n                    }\r\n\r\n                    if (pkg && pkg.main) {\r\n                        if (typeof pkg.main !== 'string') {\r\n                            var mainError = new TypeError('package \u201C' + pkg.name + '\u201D `main` must be a string');\r\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\r\n                            return cb(mainError);\r\n                        }\r\n                        if (pkg.main === '.' || pkg.main === './') {\r\n                            pkg.main = 'index';\r\n                        }\r\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\r\n                            if (err) return cb(err);\r\n                            if (m) return cb(null, m, pkg);\r\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\r\n\r\n                            var dir = path.resolve(x, pkg.main);\r\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\r\n                                if (err) return cb(err);\r\n                                if (n) return cb(null, n, pkg);\r\n                                loadAsFile(path.join(x, 'index'), pkg, cb);\r\n                            });\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    function processDirs(cb, dirs) {\r\n        if (dirs.length === 0) return cb(null, undefined);\r\n        var dir = dirs[0];\r\n\r\n        isDirectory(path.dirname(dir), isdir);\r\n\r\n        function isdir(err, isdir) {\r\n            if (err) return cb(err);\r\n            if (!isdir) return processDirs(cb, dirs.slice(1));\r\n            loadAsFile(dir, opts.package, onfile);\r\n        }\r\n\r\n        function onfile(err, m, pkg) {\r\n            if (err) return cb(err);\r\n            if (m) return cb(null, m, pkg);\r\n            loadAsDirectory(dir, opts.package, ondir);\r\n        }\r\n\r\n        function ondir(err, n, pkg) {\r\n            if (err) return cb(err);\r\n            if (n) return cb(null, n, pkg);\r\n            processDirs(cb, dirs.slice(1));\r\n        }\r\n    }\r\n    function loadNodeModules(x, start, cb) {\r\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\r\n        processDirs(\r\n            cb,\r\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\r\n        );\r\n    }\r\n};\r\n", "var current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\r\n\r\nfunction specifierIncluded(specifier) {\r\n    var parts = specifier.split(' ');\r\n    var op = parts.length > 1 ? parts[0] : '=';\r\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\r\n\r\n    for (var i = 0; i < 3; ++i) {\r\n        var cur = parseInt(current[i] || 0, 10);\r\n        var ver = parseInt(versionParts[i] || 0, 10);\r\n        if (cur === ver) {\r\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\r\n        }\r\n        if (op === '<') {\r\n            return cur < ver;\r\n        } else if (op === '>=') {\r\n            return cur >= ver;\r\n        }\r\n        return false;\r\n    }\r\n    return op === '>=';\r\n}\r\n\r\nfunction matchesRange(range) {\r\n    var specifiers = range.split(/ ?&& ?/);\r\n    if (specifiers.length === 0) { return false; }\r\n    for (var i = 0; i < specifiers.length; ++i) {\r\n        if (!specifierIncluded(specifiers[i])) { return false; }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction versionIncluded(specifierValue) {\r\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\r\n    if (specifierValue && typeof specifierValue === 'object') {\r\n        for (var i = 0; i < specifierValue.length; ++i) {\r\n            if (matchesRange(specifierValue[i])) { return true; }\r\n        }\r\n        return false;\r\n    }\r\n    return matchesRange(specifierValue);\r\n}\r\n\r\nvar data = require('./core.json');\r\n\r\nvar core = {};\r\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\r\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\r\n        core[mod] = versionIncluded(data[mod]);\r\n    }\r\n}\r\nmodule.exports = core;\r\n", "var isCoreModule = require('is-core-module');\r\n\r\nmodule.exports = function isCore(x) {\r\n    return isCoreModule(x);\r\n};\r\n", "var isCore = require('is-core-module');\r\nvar fs = require('fs');\r\nvar path = require('path');\r\nvar getHomedir = require('./homedir');\r\nvar caller = require('./caller');\r\nvar nodeModulesPaths = require('./node-modules-paths');\r\nvar normalizeOptions = require('./normalize-options');\r\n\r\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\r\n\r\nvar homedir = getHomedir();\r\nvar defaultPaths = function () {\r\n    return [\r\n        path.join(homedir, '.node_modules'),\r\n        path.join(homedir, '.node_libraries')\r\n    ];\r\n};\r\n\r\nvar defaultIsFile = function isFile(file) {\r\n    try {\r\n        var stat = fs.statSync(file, { throwIfNoEntry: false });\r\n    } catch (e) {\r\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\r\n        throw e;\r\n    }\r\n    return !!stat && (stat.isFile() || stat.isFIFO());\r\n};\r\n\r\nvar defaultIsDir = function isDirectory(dir) {\r\n    try {\r\n        var stat = fs.statSync(dir, { throwIfNoEntry: false });\r\n    } catch (e) {\r\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\r\n        throw e;\r\n    }\r\n    return !!stat && stat.isDirectory();\r\n};\r\n\r\nvar defaultRealpathSync = function realpathSync(x) {\r\n    try {\r\n        return realpathFS(x);\r\n    } catch (realpathErr) {\r\n        if (realpathErr.code !== 'ENOENT') {\r\n            throw realpathErr;\r\n        }\r\n    }\r\n    return x;\r\n};\r\n\r\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\r\n    if (opts && opts.preserveSymlinks === false) {\r\n        return realpathSync(x);\r\n    }\r\n    return x;\r\n};\r\n\r\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\r\n    var body = readFileSync(pkgfile);\r\n    try {\r\n        var pkg = JSON.parse(body);\r\n        return pkg;\r\n    } catch (jsonErr) {}\r\n};\r\n\r\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\r\n    var dirs = nodeModulesPaths(start, opts, x);\r\n    for (var i = 0; i < dirs.length; i++) {\r\n        dirs[i] = path.join(dirs[i], x);\r\n    }\r\n    return dirs;\r\n};\r\n\r\nmodule.exports = function resolveSync(x, options) {\r\n    if (typeof x !== 'string') {\r\n        throw new TypeError('Path must be a string.');\r\n    }\r\n    var opts = normalizeOptions(x, options);\r\n\r\n    var isFile = opts.isFile || defaultIsFile;\r\n    var readFileSync = opts.readFileSync || fs.readFileSync;\r\n    var isDirectory = opts.isDirectory || defaultIsDir;\r\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\r\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\r\n    if (opts.readFileSync && opts.readPackageSync) {\r\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\r\n    }\r\n    var packageIterator = opts.packageIterator;\r\n\r\n    var extensions = opts.extensions || ['.js'];\r\n    var includeCoreModules = opts.includeCoreModules !== false;\r\n    var basedir = opts.basedir || path.dirname(caller());\r\n    var parent = opts.filename || basedir;\r\n\r\n    opts.paths = opts.paths || defaultPaths();\r\n\r\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\r\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\r\n\r\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\r\n        var res = path.resolve(absoluteStart, x);\r\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\r\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\r\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\r\n    } else if (includeCoreModules && isCore(x)) {\r\n        return x;\r\n    } else {\r\n        var n = loadNodeModulesSync(x, absoluteStart);\r\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\r\n    }\r\n\r\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\r\n    err.code = 'MODULE_NOT_FOUND';\r\n    throw err;\r\n\r\n    function loadAsFileSync(x) {\r\n        var pkg = loadpkg(path.dirname(x));\r\n\r\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\r\n            var rfile = path.relative(pkg.dir, x);\r\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\r\n            if (r) {\r\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\r\n            }\r\n        }\r\n\r\n        if (isFile(x)) {\r\n            return x;\r\n        }\r\n\r\n        for (var i = 0; i < extensions.length; i++) {\r\n            var file = x + extensions[i];\r\n            if (isFile(file)) {\r\n                return file;\r\n            }\r\n        }\r\n    }\r\n\r\n    function loadpkg(dir) {\r\n        if (dir === '' || dir === '/') return;\r\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\r\n            return;\r\n        }\r\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\r\n\r\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\r\n\r\n        if (!isFile(pkgfile)) {\r\n            return loadpkg(path.dirname(dir));\r\n        }\r\n\r\n        var pkg = readPackageSync(readFileSync, pkgfile);\r\n\r\n        if (pkg && opts.packageFilter) {\r\n            // v2 will pass pkgfile\r\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\r\n        }\r\n\r\n        return { pkg: pkg, dir: dir };\r\n    }\r\n\r\n    function loadAsDirectorySync(x) {\r\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\r\n        if (isFile(pkgfile)) {\r\n            try {\r\n                var pkg = readPackageSync(readFileSync, pkgfile);\r\n            } catch (e) {}\r\n\r\n            if (pkg && opts.packageFilter) {\r\n                // v2 will pass pkgfile\r\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\r\n            }\r\n\r\n            if (pkg && pkg.main) {\r\n                if (typeof pkg.main !== 'string') {\r\n                    var mainError = new TypeError('package \u201C' + pkg.name + '\u201D `main` must be a string');\r\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\r\n                    throw mainError;\r\n                }\r\n                if (pkg.main === '.' || pkg.main === './') {\r\n                    pkg.main = 'index';\r\n                }\r\n                try {\r\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\r\n                    if (m) return m;\r\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\r\n                    if (n) return n;\r\n                } catch (e) {}\r\n            }\r\n        }\r\n\r\n        return loadAsFileSync(path.join(x, '/index'));\r\n    }\r\n\r\n    function loadNodeModulesSync(x, start) {\r\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\r\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\r\n\r\n        for (var i = 0; i < dirs.length; i++) {\r\n            var dir = dirs[i];\r\n            if (isDirectory(path.dirname(dir))) {\r\n                var m = loadAsFileSync(dir);\r\n                if (m) return m;\r\n                var n = loadAsDirectorySync(dir);\r\n                if (n) return n;\r\n            }\r\n        }\r\n    }\r\n};\r\n", "var async = require('./lib/async');\r\nasync.core = require('./lib/core');\r\nasync.isCore = require('./lib/is-core');\r\nasync.sync = require('./lib/sync');\r\n\r\nmodule.exports = async;\r\n"],
  "mappings": ";;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,gBAAM,IAAI,MAAM,gGAAgG,sBAAsB;AAAA,QACxI;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,gBAAM,IAAI,MAAM,8FAA8F,sBAAsB;AAAA,QACtI;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,gBAAM,IAAI,MAAM,oGAAoG,sBAAsB;AAAA,QAC5I;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,gBAAM,IAAI,MAAM,kFAAkF,sBAAsB;AAAA,QAC1H;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA;AAEA,QAAI,KAAK;AAIT,WAAO,UAAU,GAAG,WAAW,SAAS,UAAU;AAC9C,UAAI,OAAO,QAAQ,IAAI;AACvB,UAAI,OAAO,QAAQ,IAAI,WAAW,QAAQ,IAAI,QAAQ,QAAQ,IAAI,SAAS,QAAQ,IAAI;AAEvF,UAAI,QAAQ,aAAa,SAAS;AAC9B,eAAO,QAAQ,IAAI,eAAe,QAAQ,IAAI,YAAY,QAAQ,IAAI,YAAY,QAAQ;AAAA,MAC9F;AAEA,UAAI,QAAQ,aAAa,UAAU;AAC/B,eAAO,SAAS,OAAO,YAAY,OAAO;AAAA,MAC9C;AAEA,UAAI,QAAQ,aAAa,SAAS;AAC9B,eAAO,SAAS,QAAQ,OAAO,MAAM,IAAI,UAAW,OAAO,WAAW,OAAO;AAAA,MACjF;AAEA,aAAO,QAAQ;AAAA,IACnB;AAAA;AAAA;;;ACvBA;AAAA;AAAA,WAAO,UAAU,WAAY;AAEzB,UAAI,wBAAwB,MAAM;AAClC,YAAM,oBAAoB,SAAU,GAAGA,QAAO;AAAE,eAAOA;AAAA,MAAO;AAC9D,UAAI,QAAS,IAAI,MAAM,EAAG;AAC1B,YAAM,oBAAoB;AAC1B,aAAO,MAAM,GAAG,YAAY;AAAA,IAChC;AAAA;AAAA;;;ACPA;AAAA;AAAA;AAEA,QAAI,YAAY,QAAQ,aAAa;AAGrC,QAAI,iBACA;AAEJ,QAAI,QAAQ,CAAC;AAEb,aAAS,eAAe,UAAU;AAChC,aAAO,eAAe,KAAK,QAAQ,EAAE,MAAM,CAAC;AAAA,IAC9C;AAEA,UAAM,QAAQ,SAAS,YAAY;AACjC,UAAI,OAAO,eAAe,UAAU;AAClC,cAAM,IAAI;AAAA,UACN,kDAAkD,OAAO;AAAA,QAC7D;AAAA,MACF;AACA,UAAI,WAAW,eAAe,UAAU;AACxC,UAAI,CAAC,YAAY,SAAS,WAAW,GAAG;AACtC,cAAM,IAAI,UAAU,mBAAmB,aAAa,GAAG;AAAA,MACzD;AACA,aAAO;AAAA,QACL,MAAM,SAAS;AAAA,QACf,KAAK,SAAS,OAAO,SAAS,KAAK,SAAS,KAAK,SAAS,GAAG,MAAM,GAAG,EAAE;AAAA,QACxE,MAAM,SAAS;AAAA,QACf,KAAK,SAAS;AAAA,QACd,MAAM,SAAS;AAAA,MACjB;AAAA,IACF;AAMA,QAAI,cACA;AACJ,QAAI,QAAQ,CAAC;AAGb,aAAS,eAAe,UAAU;AAChC,aAAO,YAAY,KAAK,QAAQ,EAAE,MAAM,CAAC;AAAA,IAC3C;AAGA,UAAM,QAAQ,SAAS,YAAY;AACjC,UAAI,OAAO,eAAe,UAAU;AAClC,cAAM,IAAI;AAAA,UACN,kDAAkD,OAAO;AAAA,QAC7D;AAAA,MACF;AACA,UAAI,WAAW,eAAe,UAAU;AACxC,UAAI,CAAC,YAAY,SAAS,WAAW,GAAG;AACtC,cAAM,IAAI,UAAU,mBAAmB,aAAa,GAAG;AAAA,MACzD;AAEA,aAAO;AAAA,QACL,MAAM,SAAS;AAAA,QACf,KAAK,SAAS,GAAG,MAAM,GAAG,EAAE;AAAA,QAC5B,MAAM,SAAS;AAAA,QACf,KAAK,SAAS;AAAA,QACd,MAAM,SAAS;AAAA,MACjB;AAAA,IACF;AAGA,QAAI;AACF,aAAO,UAAU,MAAM;AAAA;AAEvB,aAAO,UAAU,MAAM;AAEzB,WAAO,QAAQ,QAAQ,MAAM;AAC7B,WAAO,QAAQ,QAAQ,MAAM;AAAA;AAAA;;;AC1E7B;AAAA;AAAA,QAAI,OAAO;AACX,QAAI,QAAQ,KAAK,SAAS;AAE1B,QAAI,qBAAqB,SAASC,oBAAmB,eAAe,SAAS;AACzE,UAAI,SAAS;AACb,UAAK,eAAgB,KAAK,aAAa,GAAG;AACtC,iBAAS;AAAA,MACb,WAAY,QAAS,KAAK,aAAa,GAAG;AACtC,iBAAS;AAAA,MACb;AAEA,UAAI,QAAQ,CAAC,aAAa;AAC1B,UAAI,SAAS,MAAM,aAAa;AAChC,aAAO,OAAO,QAAQ,MAAM,MAAM,SAAS,IAAI;AAC3C,cAAM,KAAK,OAAO,GAAG;AACrB,iBAAS,MAAM,OAAO,GAAG;AAAA,MAC7B;AAEA,aAAO,MAAM,OAAO,SAAU,MAAM,OAAO;AACvC,eAAO,KAAK,OAAO,QAAQ,IAAI,SAAU,WAAW;AAChD,iBAAO,KAAK,QAAQ,QAAQ,OAAO,SAAS;AAAA,QAChD,CAAC,CAAC;AAAA,MACN,GAAG,CAAC,CAAC;AAAA,IACT;AAEA,WAAO,UAAU,SAAS,iBAAiB,OAAO,MAAM,SAAS;AAC7D,UAAI,UAAU,QAAQ,KAAK,kBACrB,CAAC,EAAE,OAAO,KAAK,eAAe,IAC9B,CAAC,cAAc;AAErB,UAAI,QAAQ,OAAO,KAAK,UAAU,YAAY;AAC1C,eAAO,KAAK;AAAA,UACR;AAAA,UACA;AAAA,UACA,WAAY;AAAE,mBAAO,mBAAmB,OAAO,OAAO;AAAA,UAAG;AAAA,UACzD;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,OAAO,mBAAmB,OAAO,OAAO;AAC5C,aAAO,QAAQ,KAAK,QAAQ,KAAK,OAAO,KAAK,KAAK,IAAI;AAAA,IAC1D;AAAA;AAAA;;;ACzCA;AAAA;AAAA,WAAO,UAAU,SAAU,GAAG,MAAM;AAQhC,aAAO,QAAQ,CAAC;AAAA,IACpB;AAAA;AAAA;;;ACTA;AAAA;AAAA;AAIA,QAAI,gBAAgB;AACpB,QAAI,QAAQ,MAAM,UAAU;AAC5B,QAAI,QAAQ,OAAO,UAAU;AAC7B,QAAI,WAAW;AAEf,WAAO,UAAU,SAAS,KAAK,MAAM;AACjC,UAAI,SAAS;AACb,UAAI,OAAO,WAAW,cAAc,MAAM,KAAK,MAAM,MAAM,UAAU;AACjE,cAAM,IAAI,UAAU,gBAAgB,MAAM;AAAA,MAC9C;AACA,UAAI,OAAO,MAAM,KAAK,WAAW,CAAC;AAElC,UAAI;AACJ,UAAI,SAAS,WAAY;AACrB,YAAI,gBAAgB,OAAO;AACvB,cAAI,SAAS,OAAO;AAAA,YAChB;AAAA,YACA,KAAK,OAAO,MAAM,KAAK,SAAS,CAAC;AAAA,UACrC;AACA,cAAI,OAAO,MAAM,MAAM,QAAQ;AAC3B,mBAAO;AAAA,UACX;AACA,iBAAO;AAAA,QACX,OAAO;AACH,iBAAO,OAAO;AAAA,YACV;AAAA,YACA,KAAK,OAAO,MAAM,KAAK,SAAS,CAAC;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,cAAc,KAAK,IAAI,GAAG,OAAO,SAAS,KAAK,MAAM;AACzD,UAAI,YAAY,CAAC;AACjB,eAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,kBAAU,KAAK,MAAM,CAAC;AAAA,MAC1B;AAEA,cAAQ,SAAS,UAAU,sBAAsB,UAAU,KAAK,GAAG,IAAI,2CAA2C,EAAE,MAAM;AAE1H,UAAI,OAAO,WAAW;AAClB,YAAI,QAAQ,SAASC,SAAQ;AAAA,QAAC;AAC9B,cAAM,YAAY,OAAO;AACzB,cAAM,YAAY,IAAI,MAAM;AAC5B,cAAM,YAAY;AAAA,MACtB;AAEA,aAAO;AAAA,IACX;AAAA;AAAA;;;ACnDA;AAAA;AAAA;AAEA,QAAI,iBAAiB;AAErB,WAAO,UAAU,SAAS,UAAU,QAAQ;AAAA;AAAA;;;ACJ5C;AAAA;AAAA;AAEA,QAAI,OAAO;AAEX,WAAO,UAAU,KAAK,KAAK,SAAS,MAAM,OAAO,UAAU,cAAc;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJzE;AAAA;AAAA;AAEA,QAAI,MAAM;AAEV,aAAS,kBAAkB,SAAS,WAAW;AAC9C,UAAI,YAAY,QAAQ,MAAM,GAAG;AACjC,UAAI,QAAQ,UAAU,MAAM,GAAG;AAC/B,UAAI,KAAK,MAAM,SAAS,IAAI,MAAM,KAAK;AACvC,UAAI,gBAAgB,MAAM,SAAS,IAAI,MAAM,KAAK,MAAM,IAAI,MAAM,GAAG;AAErE,eAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC3B,YAAI,MAAM,SAAS,UAAU,MAAM,GAAG,EAAE;AACxC,YAAI,MAAM,SAAS,aAAa,MAAM,GAAG,EAAE;AAC3C,YAAI,QAAQ,KAAK;AAChB;AAAA,QACD;AACA,YAAI,OAAO,KAAK;AACf,iBAAO,MAAM;AAAA,QACd;AACA,YAAI,OAAO,MAAM;AAChB,iBAAO,OAAO;AAAA,QACf;AACA,eAAO;AAAA,MACR;AACA,aAAO,OAAO;AAAA,IACf;AAEA,aAAS,aAAa,SAAS,OAAO;AACrC,UAAI,aAAa,MAAM,MAAM,QAAQ;AACrC,UAAI,WAAW,WAAW,GAAG;AAC5B,eAAO;AAAA,MACR;AACA,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE,GAAG;AAC3C,YAAI,CAAC,kBAAkB,SAAS,WAAW,EAAE,GAAG;AAC/C,iBAAO;AAAA,QACR;AAAA,MACD;AACA,aAAO;AAAA,IACR;AAEA,aAAS,gBAAgB,aAAa,gBAAgB;AACrD,UAAI,OAAO,mBAAmB,WAAW;AACxC,eAAO;AAAA,MACR;AAEA,UAAI,UAAU,OAAO,gBAAgB,cAClC,QAAQ,YAAY,QAAQ,SAAS,OACrC;AAEH,UAAI,OAAO,YAAY,UAAU;AAChC,cAAM,IAAI,UAAU,OAAO,gBAAgB,cAAc,6CAA6C,+CAA+C;AAAA,MACtJ;AAEA,UAAI,kBAAkB,OAAO,mBAAmB,UAAU;AACzD,iBAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,EAAE,GAAG;AAC/C,cAAI,aAAa,SAAS,eAAe,EAAE,GAAG;AAC7C,mBAAO;AAAA,UACR;AAAA,QACD;AACA,eAAO;AAAA,MACR;AACA,aAAO,aAAa,SAAS,cAAc;AAAA,IAC5C;AAEA,QAAI,OAAO;AAEX,WAAO,UAAU,SAAS,OAAO,GAAG,aAAa;AAChD,aAAO,IAAI,MAAM,CAAC,KAAK,gBAAgB,aAAa,KAAK,EAAE;AAAA,IAC5D;AAAA;AAAA;;;ACpEA;AAAA;AAAA,QAAI,KAAK;AACT,QAAI,aAAa;AACjB,QAAI,OAAO;AACX,QAAI,SAAS;AACb,QAAI,mBAAmB;AACvB,QAAI,mBAAmB;AACvB,QAAI,SAAS;AAEb,QAAI,aAAa,QAAQ,aAAa,WAAW,GAAG,YAAY,OAAO,GAAG,SAAS,WAAW,aAAa,GAAG,SAAS,SAAS,GAAG;AAEnI,QAAI,UAAU,WAAW;AACzB,QAAI,eAAe,WAAY;AAC3B,aAAO;AAAA,QACH,KAAK,KAAK,SAAS,eAAe;AAAA,QAClC,KAAK,KAAK,SAAS,iBAAiB;AAAA,MACxC;AAAA,IACJ;AAEA,QAAI,gBAAgB,SAAS,OAAO,MAAM,IAAI;AAC1C,SAAG,KAAK,MAAM,SAAU,KAAK,MAAM;AAC/B,YAAI,CAAC,KAAK;AACN,iBAAO,GAAG,MAAM,KAAK,OAAO,KAAK,KAAK,OAAO,CAAC;AAAA,QAClD;AACA,YAAI,IAAI,SAAS,YAAY,IAAI,SAAS;AAAW,iBAAO,GAAG,MAAM,KAAK;AAC1E,eAAO,GAAG,GAAG;AAAA,MACjB,CAAC;AAAA,IACL;AAEA,QAAI,eAAe,SAAS,YAAY,KAAK,IAAI;AAC7C,SAAG,KAAK,KAAK,SAAU,KAAK,MAAM;AAC9B,YAAI,CAAC,KAAK;AACN,iBAAO,GAAG,MAAM,KAAK,YAAY,CAAC;AAAA,QACtC;AACA,YAAI,IAAI,SAAS,YAAY,IAAI,SAAS;AAAW,iBAAO,GAAG,MAAM,KAAK;AAC1E,eAAO,GAAG,GAAG;AAAA,MACjB,CAAC;AAAA,IACL;AAEA,QAAI,kBAAkB,SAAS,SAAS,GAAG,IAAI;AAC3C,iBAAW,GAAG,SAAU,aAAa,UAAU;AAC3C,YAAI,eAAe,YAAY,SAAS;AAAU,aAAG,WAAW;AAAA;AAC3D,aAAG,MAAM,cAAc,IAAI,QAAQ;AAAA,MAC5C,CAAC;AAAA,IACL;AAEA,QAAI,gBAAgB,SAASC,eAAc,UAAU,GAAG,MAAM,IAAI;AAC9D,UAAI,QAAQ,KAAK,qBAAqB,OAAO;AACzC,iBAAS,GAAG,EAAE;AAAA,MAClB,OAAO;AACH,WAAG,MAAM,CAAC;AAAA,MACd;AAAA,IACJ;AAEA,QAAI,qBAAqB,SAASC,oBAAmB,UAAU,SAAS,IAAI;AACxE,eAAS,SAAS,SAAU,aAAa,MAAM;AAC3C,YAAI;AAAa,aAAG,WAAW;AAAA,aAC1B;AACD,cAAI;AACA,gBAAI,MAAM,KAAK,MAAM,IAAI;AACzB,eAAG,MAAM,GAAG;AAAA,UAChB,SAAS,SAAP;AACE,eAAG,IAAI;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACL;AAEA,QAAI,uBAAuB,SAASC,sBAAqB,GAAG,OAAO,MAAM;AACrE,UAAI,OAAO,iBAAiB,OAAO,MAAM,CAAC;AAC1C,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,IAAI,CAAC;AAAA,MAClC;AACA,aAAO;AAAA,IACX;AAEA,WAAO,UAAU,SAAS,QAAQ,GAAG,SAAS,UAAU;AACpD,UAAI,KAAK;AACT,UAAI,OAAO;AACX,UAAI,OAAO,YAAY,YAAY;AAC/B,aAAK;AACL,eAAO,CAAC;AAAA,MACZ;AACA,UAAI,OAAO,MAAM,UAAU;AACvB,YAAI,MAAM,IAAI,UAAU,wBAAwB;AAChD,eAAO,QAAQ,SAAS,WAAY;AAChC,aAAG,GAAG;AAAA,QACV,CAAC;AAAA,MACL;AAEA,aAAO,iBAAiB,GAAG,IAAI;AAE/B,UAAI,SAAS,KAAK,UAAU;AAC5B,UAAI,cAAc,KAAK,eAAe;AACtC,UAAI,WAAW,KAAK,YAAY,GAAG;AACnC,UAAI,WAAW,KAAK,YAAY;AAChC,UAAI,cAAc,KAAK,eAAe;AACtC,UAAI,KAAK,YAAY,KAAK,aAAa;AACnC,YAAI,cAAc,IAAI,UAAU,sDAAsD;AACtF,eAAO,QAAQ,SAAS,WAAY;AAChC,aAAG,WAAW;AAAA,QAClB,CAAC;AAAA,MACL;AACA,UAAI,kBAAkB,KAAK;AAE3B,UAAI,aAAa,KAAK,cAAc,CAAC,KAAK;AAC1C,UAAI,qBAAqB,KAAK,uBAAuB;AACrD,UAAI,UAAU,KAAK,WAAW,KAAK,QAAQ,OAAO,CAAC;AACnD,UAAI,SAAS,KAAK,YAAY;AAE9B,WAAK,QAAQ,KAAK,SAAS,aAAa;AAGxC,UAAI,gBAAgB,KAAK,QAAQ,OAAO;AAExC;AAAA,QACI;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAUC,MAAK,WAAW;AACtB,cAAIA;AAAK,eAAGA,IAAG;AAAA;AACV,iBAAK,SAAS;AAAA,QACvB;AAAA,MACJ;AAEA,UAAI;AACJ,eAAS,KAAKC,UAAS;AACnB,YAAK,0CAA2C,KAAK,CAAC,GAAG;AACrD,gBAAM,KAAK,QAAQA,UAAS,CAAC;AAC7B,cAAI,MAAM,OAAO,MAAM,QAAQ,EAAE,MAAM,EAAE,MAAM;AAAK,mBAAO;AAC3D,cAAK,MAAO,KAAK,CAAC,KAAK,QAAQA,UAAS;AACpC,4BAAgB,KAAK,KAAK,SAAS,MAAM;AAAA,UAC7C;AAAO,uBAAW,KAAK,KAAK,SAAS,MAAM;AAAA,QAC/C,WAAW,sBAAsB,OAAO,CAAC,GAAG;AACxC,iBAAO,GAAG,MAAM,CAAC;AAAA,QACrB;AAAO,0BAAgB,GAAGA,UAAS,SAAUD,MAAK,GAAG,KAAK;AACtD,gBAAIA;AAAK,iBAAGA,IAAG;AAAA,qBACN,GAAG;AACR,qBAAO,cAAc,UAAU,GAAG,MAAM,SAAUA,MAAK,OAAO;AAC1D,oBAAIA,MAAK;AACL,qBAAGA,IAAG;AAAA,gBACV,OAAO;AACH,qBAAG,MAAM,OAAO,GAAG;AAAA,gBACvB;AAAA,cACJ,CAAC;AAAA,YACL,OAAO;AACH,kBAAI,cAAc,IAAI,MAAM,yBAAyB,IAAI,aAAa,SAAS,GAAG;AAClF,0BAAY,OAAO;AACnB,iBAAG,WAAW;AAAA,YAClB;AAAA,UACJ,CAAC;AAAA,MACL;AAEA,eAAS,OAAOA,MAAK,GAAG,KAAK;AACzB,YAAIA;AAAK,aAAGA,IAAG;AAAA,iBACN;AAAG,aAAG,MAAM,GAAG,GAAG;AAAA;AACtB,0BAAgB,KAAK,SAAUA,MAAK,GAAGE,MAAK;AAC7C,gBAAIF;AAAK,iBAAGA,IAAG;AAAA,qBACN,GAAG;AACR,4BAAc,UAAU,GAAG,MAAM,SAAUA,MAAK,OAAO;AACnD,oBAAIA,MAAK;AACL,qBAAGA,IAAG;AAAA,gBACV,OAAO;AACH,qBAAG,MAAM,OAAOE,IAAG;AAAA,gBACvB;AAAA,cACJ,CAAC;AAAA,YACL,OAAO;AACH,kBAAI,cAAc,IAAI,MAAM,yBAAyB,IAAI,aAAa,SAAS,GAAG;AAClF,0BAAY,OAAO;AACnB,iBAAG,WAAW;AAAA,YAClB;AAAA,UACJ,CAAC;AAAA,MACL;AAEA,eAAS,WAAWC,IAAG,YAAYC,WAAU;AACzC,YAAI,oBAAoB;AACxB,YAAIC,MAAKD;AACT,YAAI,OAAO,sBAAsB,YAAY;AACzC,UAAAC,MAAK;AACL,8BAAoB;AAAA,QACxB;AAEA,YAAI,OAAO,CAAC,EAAE,EAAE,OAAO,UAAU;AACjC,aAAK,MAAMF,IAAG,iBAAiB;AAE/B,iBAAS,KAAKG,OAAMH,IAAG,aAAa;AAChC,cAAIG,MAAK,WAAW;AAAG,mBAAOD,IAAG,MAAM,QAAW,WAAW;AAC7D,cAAI,OAAOF,KAAIG,MAAK;AAEpB,cAAI,MAAM;AACV,cAAI;AAAK,kBAAM,MAAM,GAAG;AAAA;AACnB,oBAAQ,KAAK,QAAQ,IAAI,GAAG,KAAK;AAEtC,mBAAS,MAAMN,MAAK,MAAM,KAAK;AAC3B,kBAAM;AACN,gBAAIA;AAAK,qBAAOK,IAAGL,IAAG;AACtB,gBAAI,OAAO,OAAO,KAAK,YAAY;AAC/B,kBAAI,QAAQ,KAAK,SAAS,KAAK,IAAI;AACnC,kBAAI,MAAM,MAAM,MAAM,GAAG,MAAM,SAASM,MAAK,GAAG,MAAM;AACtD,kBAAI,IAAI,KAAK,WAAW,KAAKH,IAAG,GAAG;AACnC,kBAAI;AAAG,uBAAO;AAAA,kBACV,CAAC,EAAE,EAAE,OAAO,WAAW,MAAM,CAAC;AAAA,kBAC9B,KAAK,QAAQ,KAAK,CAAC;AAAA,kBACnB;AAAA,gBACJ;AAAA,YACJ;AACA,mBAAO,MAAM,IAAI;AAAA,UACrB;AACA,mBAAS,KAAKH,MAAK,IAAI;AACnB,gBAAIA;AAAK,qBAAOK,IAAGL,IAAG;AACtB,gBAAI;AAAI,qBAAOK,IAAG,MAAM,MAAM,GAAG;AACjC,iBAAKC,MAAK,MAAM,CAAC,GAAGH,IAAG,GAAG;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAEA,eAAS,QAAQ,KAAKE,KAAI;AACtB,YAAI,QAAQ,MAAM,QAAQ;AAAK,iBAAOA,IAAG,IAAI;AAC7C,YAAI,QAAQ,aAAa,WAAY,cAAe,KAAK,GAAG,GAAG;AAC3D,iBAAOA,IAAG,IAAI;AAAA,QAClB;AACA,YAAK,2BAA4B,KAAK,GAAG;AAAG,iBAAOA,IAAG,IAAI;AAE1D,sBAAc,UAAU,KAAK,MAAM,SAAU,WAAW,QAAQ;AAC5D,cAAI;AAAW,mBAAO,QAAQ,KAAK,QAAQ,GAAG,GAAGA,GAAE;AACnD,cAAI,UAAU,KAAK,KAAK,QAAQ,cAAc;AAC9C,iBAAO,SAAS,SAAUL,MAAK,IAAI;AAE/B,gBAAI,CAAC;AAAI,qBAAO,QAAQ,KAAK,QAAQ,GAAG,GAAGK,GAAE;AAE7C,wBAAY,UAAU,SAAS,SAAUL,MAAK,UAAU;AACpD,kBAAIA;AAAK,gBAAAK,IAAGL,IAAG;AAEf,kBAAI,MAAM;AAEV,kBAAI,OAAO,KAAK,eAAe;AAC3B,sBAAM,KAAK,cAAc,KAAK,OAAO;AAAA,cACzC;AACA,cAAAK,IAAG,MAAM,KAAK,GAAG;AAAA,YACrB,CAAC;AAAA,UACL,CAAC;AAAA,QACL,CAAC;AAAA,MACL;AAEA,eAAS,gBAAgBF,IAAG,wBAAwBC,WAAU;AAC1D,YAAIC,MAAKD;AACT,YAAI,OAAO;AACX,YAAI,OAAO,SAAS,YAAY;AAC5B,UAAAC,MAAK;AACL,iBAAO,KAAK;AAAA,QAChB;AAEA,sBAAc,UAAUF,IAAG,MAAM,SAAU,WAAW,QAAQ;AAC1D,cAAI;AAAW,mBAAOE,IAAG,SAAS;AAClC,cAAI,UAAU,KAAK,KAAK,QAAQ,cAAc;AAC9C,iBAAO,SAAS,SAAUL,MAAK,IAAI;AAC/B,gBAAIA;AAAK,qBAAOK,IAAGL,IAAG;AACtB,gBAAI,CAAC;AAAI,qBAAO,WAAW,KAAK,KAAKG,IAAG,OAAO,GAAG,MAAME,GAAE;AAE1D,wBAAY,UAAU,SAAS,SAAUL,MAAK,UAAU;AACpD,kBAAIA;AAAK,uBAAOK,IAAGL,IAAG;AAEtB,kBAAI,MAAM;AAEV,kBAAI,OAAO,KAAK,eAAe;AAC3B,sBAAM,KAAK,cAAc,KAAK,OAAO;AAAA,cACzC;AAEA,kBAAI,OAAO,IAAI,MAAM;AACjB,oBAAI,OAAO,IAAI,SAAS,UAAU;AAC9B,sBAAI,YAAY,IAAI,UAAU,mBAAc,IAAI,OAAO,gCAA2B;AAClF,4BAAU,OAAO;AACjB,yBAAOK,IAAG,SAAS;AAAA,gBACvB;AACA,oBAAI,IAAI,SAAS,OAAO,IAAI,SAAS,MAAM;AACvC,sBAAI,OAAO;AAAA,gBACf;AACA,2BAAW,KAAK,QAAQF,IAAG,IAAI,IAAI,GAAG,KAAK,SAAUH,MAAK,GAAGE,MAAK;AAC9D,sBAAIF;AAAK,2BAAOK,IAAGL,IAAG;AACtB,sBAAI;AAAG,2BAAOK,IAAG,MAAM,GAAGH,IAAG;AAC7B,sBAAI,CAACA;AAAK,2BAAO,WAAW,KAAK,KAAKC,IAAG,OAAO,GAAGD,MAAKG,GAAE;AAE1D,sBAAI,MAAM,KAAK,QAAQF,IAAGD,KAAI,IAAI;AAClC,kCAAgB,KAAKA,MAAK,SAAUF,MAAK,GAAGE,MAAK;AAC7C,wBAAIF;AAAK,6BAAOK,IAAGL,IAAG;AACtB,wBAAI;AAAG,6BAAOK,IAAG,MAAM,GAAGH,IAAG;AAC7B,+BAAW,KAAK,KAAKC,IAAG,OAAO,GAAGD,MAAKG,GAAE;AAAA,kBAC7C,CAAC;AAAA,gBACL,CAAC;AACD;AAAA,cACJ;AAEA,yBAAW,KAAK,KAAKF,IAAG,QAAQ,GAAG,KAAKE,GAAE;AAAA,YAC9C,CAAC;AAAA,UACL,CAAC;AAAA,QACL,CAAC;AAAA,MACL;AAEA,eAAS,YAAYA,KAAI,MAAM;AAC3B,YAAI,KAAK,WAAW;AAAG,iBAAOA,IAAG,MAAM,MAAS;AAChD,YAAI,MAAM,KAAK;AAEf,oBAAY,KAAK,QAAQ,GAAG,GAAG,KAAK;AAEpC,iBAAS,MAAML,MAAKO,QAAO;AACvB,cAAIP;AAAK,mBAAOK,IAAGL,IAAG;AACtB,cAAI,CAACO;AAAO,mBAAO,YAAYF,KAAI,KAAK,MAAM,CAAC,CAAC;AAChD,qBAAW,KAAK,KAAK,SAASG,OAAM;AAAA,QACxC;AAEA,iBAASA,QAAOR,MAAK,GAAG,KAAK;AACzB,cAAIA;AAAK,mBAAOK,IAAGL,IAAG;AACtB,cAAI;AAAG,mBAAOK,IAAG,MAAM,GAAG,GAAG;AAC7B,0BAAgB,KAAK,KAAK,SAAS,KAAK;AAAA,QAC5C;AAEA,iBAAS,MAAML,MAAK,GAAG,KAAK;AACxB,cAAIA;AAAK,mBAAOK,IAAGL,IAAG;AACtB,cAAI;AAAG,mBAAOK,IAAG,MAAM,GAAG,GAAG;AAC7B,sBAAYA,KAAI,KAAK,MAAM,CAAC,CAAC;AAAA,QACjC;AAAA,MACJ;AACA,eAAS,gBAAgBF,IAAG,OAAOE,KAAI;AACnC,YAAI,QAAQ,WAAY;AAAE,iBAAO,qBAAqBF,IAAG,OAAO,IAAI;AAAA,QAAG;AACvE;AAAA,UACIE;AAAA,UACA,kBAAkB,gBAAgBF,IAAG,OAAO,OAAO,IAAI,IAAI,MAAM;AAAA,QACrE;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxUA,IAAAM,gBAAA;AAAA;AAAA,QAAI,UAAW,QAAQ,YAAY,QAAQ,SAAS,QAAQ,QAAQ,SAAS,KAAK,MAAM,GAAG,KAAM,CAAC;AAElG,aAAS,kBAAkB,WAAW;AAClC,UAAI,QAAQ,UAAU,MAAM,GAAG;AAC/B,UAAI,KAAK,MAAM,SAAS,IAAI,MAAM,KAAK;AACvC,UAAI,gBAAgB,MAAM,SAAS,IAAI,MAAM,KAAK,MAAM,IAAI,MAAM,GAAG;AAErE,eAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,YAAI,MAAM,SAAS,QAAQ,MAAM,GAAG,EAAE;AACtC,YAAI,MAAM,SAAS,aAAa,MAAM,GAAG,EAAE;AAC3C,YAAI,QAAQ,KAAK;AACb;AAAA,QACJ;AACA,YAAI,OAAO,KAAK;AACZ,iBAAO,MAAM;AAAA,QACjB,WAAW,OAAO,MAAM;AACpB,iBAAO,OAAO;AAAA,QAClB;AACA,eAAO;AAAA,MACX;AACA,aAAO,OAAO;AAAA,IAClB;AAEA,aAAS,aAAa,OAAO;AACzB,UAAI,aAAa,MAAM,MAAM,QAAQ;AACrC,UAAI,WAAW,WAAW,GAAG;AAAE,eAAO;AAAA,MAAO;AAC7C,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE,GAAG;AACxC,YAAI,CAAC,kBAAkB,WAAW,EAAE,GAAG;AAAE,iBAAO;AAAA,QAAO;AAAA,MAC3D;AACA,aAAO;AAAA,IACX;AAEA,aAAS,gBAAgB,gBAAgB;AACrC,UAAI,OAAO,mBAAmB,WAAW;AAAE,eAAO;AAAA,MAAgB;AAClE,UAAI,kBAAkB,OAAO,mBAAmB,UAAU;AACtD,iBAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,EAAE,GAAG;AAC5C,cAAI,aAAa,eAAe,EAAE,GAAG;AAAE,mBAAO;AAAA,UAAM;AAAA,QACxD;AACA,eAAO;AAAA,MACX;AACA,aAAO,aAAa,cAAc;AAAA,IACtC;AAEA,QAAI,OAAO;AAEX,QAAI,OAAO,CAAC;AACZ,SAAS,OAAO,MAAM;AAClB,UAAI,OAAO,UAAU,eAAe,KAAK,MAAM,GAAG,GAAG;AACjD,aAAK,OAAO,gBAAgB,KAAK,IAAI;AAAA,MACzC;AAAA,IACJ;AAJS;AAKT,WAAO,UAAU;AAAA;AAAA;;;ACnDjB;AAAA;AAAA,QAAI,eAAe;AAEnB,WAAO,UAAU,SAAS,OAAO,GAAG;AAChC,aAAO,aAAa,CAAC;AAAA,IACzB;AAAA;AAAA;;;ACJA;AAAA;AAAA,QAAI,SAAS;AACb,QAAI,KAAK;AACT,QAAI,OAAO;AACX,QAAI,aAAa;AACjB,QAAI,SAAS;AACb,QAAI,mBAAmB;AACvB,QAAI,mBAAmB;AAEvB,QAAI,aAAa,QAAQ,aAAa,WAAW,GAAG,gBAAgB,OAAO,GAAG,aAAa,WAAW,aAAa,GAAG,aAAa,SAAS,GAAG;AAE/I,QAAI,UAAU,WAAW;AACzB,QAAI,eAAe,WAAY;AAC3B,aAAO;AAAA,QACH,KAAK,KAAK,SAAS,eAAe;AAAA,QAClC,KAAK,KAAK,SAAS,iBAAiB;AAAA,MACxC;AAAA,IACJ;AAEA,QAAI,gBAAgB,SAAS,OAAO,MAAM;AACtC,UAAI;AACA,YAAI,OAAO,GAAG,SAAS,MAAM,EAAE,gBAAgB,MAAM,CAAC;AAAA,MAC1D,SAAS,GAAP;AACE,YAAI,MAAM,EAAE,SAAS,YAAY,EAAE,SAAS;AAAY,iBAAO;AAC/D,cAAM;AAAA,MACV;AACA,aAAO,CAAC,CAAC,SAAS,KAAK,OAAO,KAAK,KAAK,OAAO;AAAA,IACnD;AAEA,QAAI,eAAe,SAAS,YAAY,KAAK;AACzC,UAAI;AACA,YAAI,OAAO,GAAG,SAAS,KAAK,EAAE,gBAAgB,MAAM,CAAC;AAAA,MACzD,SAAS,GAAP;AACE,YAAI,MAAM,EAAE,SAAS,YAAY,EAAE,SAAS;AAAY,iBAAO;AAC/D,cAAM;AAAA,MACV;AACA,aAAO,CAAC,CAAC,QAAQ,KAAK,YAAY;AAAA,IACtC;AAEA,QAAI,sBAAsB,SAAS,aAAa,GAAG;AAC/C,UAAI;AACA,eAAO,WAAW,CAAC;AAAA,MACvB,SAAS,aAAP;AACE,YAAI,YAAY,SAAS,UAAU;AAC/B,gBAAM;AAAA,QACV;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAEA,QAAI,oBAAoB,SAASC,mBAAkB,cAAc,GAAG,MAAM;AACtE,UAAI,QAAQ,KAAK,qBAAqB,OAAO;AACzC,eAAO,aAAa,CAAC;AAAA,MACzB;AACA,aAAO;AAAA,IACX;AAEA,QAAI,yBAAyB,SAASC,wBAAuB,cAAc,SAAS;AAChF,UAAI,OAAO,aAAa,OAAO;AAC/B,UAAI;AACA,YAAI,MAAM,KAAK,MAAM,IAAI;AACzB,eAAO;AAAA,MACX,SAAS,SAAP;AAAA,MAAiB;AAAA,IACvB;AAEA,QAAI,uBAAuB,SAASC,sBAAqB,GAAG,OAAO,MAAM;AACrE,UAAI,OAAO,iBAAiB,OAAO,MAAM,CAAC;AAC1C,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,aAAK,KAAK,KAAK,KAAK,KAAK,IAAI,CAAC;AAAA,MAClC;AACA,aAAO;AAAA,IACX;AAEA,WAAO,UAAU,SAAS,YAAY,GAAG,SAAS;AAC9C,UAAI,OAAO,MAAM,UAAU;AACvB,cAAM,IAAI,UAAU,wBAAwB;AAAA,MAChD;AACA,UAAI,OAAO,iBAAiB,GAAG,OAAO;AAEtC,UAAI,SAAS,KAAK,UAAU;AAC5B,UAAI,eAAe,KAAK,gBAAgB,GAAG;AAC3C,UAAI,cAAc,KAAK,eAAe;AACtC,UAAI,eAAe,KAAK,gBAAgB;AACxC,UAAI,kBAAkB,KAAK,mBAAmB;AAC9C,UAAI,KAAK,gBAAgB,KAAK,iBAAiB;AAC3C,cAAM,IAAI,UAAU,8DAA8D;AAAA,MACtF;AACA,UAAI,kBAAkB,KAAK;AAE3B,UAAI,aAAa,KAAK,cAAc,CAAC,KAAK;AAC1C,UAAI,qBAAqB,KAAK,uBAAuB;AACrD,UAAI,UAAU,KAAK,WAAW,KAAK,QAAQ,OAAO,CAAC;AACnD,UAAI,SAAS,KAAK,YAAY;AAE9B,WAAK,QAAQ,KAAK,SAAS,aAAa;AAGxC,UAAI,gBAAgB,kBAAkB,cAAc,KAAK,QAAQ,OAAO,GAAG,IAAI;AAE/E,UAAK,0CAA2C,KAAK,CAAC,GAAG;AACrD,YAAI,MAAM,KAAK,QAAQ,eAAe,CAAC;AACvC,YAAI,MAAM,OAAO,MAAM,QAAQ,EAAE,MAAM,EAAE,MAAM;AAAK,iBAAO;AAC3D,YAAI,IAAI,eAAe,GAAG,KAAK,oBAAoB,GAAG;AACtD,YAAI;AAAG,iBAAO,kBAAkB,cAAc,GAAG,IAAI;AAAA,MACzD,WAAW,sBAAsB,OAAO,CAAC,GAAG;AACxC,eAAO;AAAA,MACX,OAAO;AACH,YAAI,IAAI,oBAAoB,GAAG,aAAa;AAC5C,YAAI;AAAG,iBAAO,kBAAkB,cAAc,GAAG,IAAI;AAAA,MACzD;AAEA,UAAI,MAAM,IAAI,MAAM,yBAAyB,IAAI,aAAa,SAAS,GAAG;AAC1E,UAAI,OAAO;AACX,YAAM;AAEN,eAAS,eAAeC,IAAG;AACvB,YAAI,MAAM,QAAQ,KAAK,QAAQA,EAAC,CAAC;AAEjC,YAAI,OAAO,IAAI,OAAO,IAAI,OAAO,KAAK,YAAY;AAC9C,cAAI,QAAQ,KAAK,SAAS,IAAI,KAAKA,EAAC;AACpC,cAAI,IAAI,KAAK,WAAW,IAAI,KAAKA,IAAG,KAAK;AACzC,cAAI,GAAG;AACH,YAAAA,KAAI,KAAK,QAAQ,IAAI,KAAK,CAAC;AAAA,UAC/B;AAAA,QACJ;AAEA,YAAI,OAAOA,EAAC,GAAG;AACX,iBAAOA;AAAA,QACX;AAEA,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACxC,cAAI,OAAOA,KAAI,WAAW;AAC1B,cAAI,OAAO,IAAI,GAAG;AACd,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAEA,eAAS,QAAQ,KAAK;AAClB,YAAI,QAAQ,MAAM,QAAQ;AAAK;AAC/B,YAAI,QAAQ,aAAa,WAAY,cAAe,KAAK,GAAG,GAAG;AAC3D;AAAA,QACJ;AACA,YAAK,2BAA4B,KAAK,GAAG;AAAG;AAE5C,YAAI,UAAU,KAAK,KAAK,kBAAkB,cAAc,KAAK,IAAI,GAAG,cAAc;AAElF,YAAI,CAAC,OAAO,OAAO,GAAG;AAClB,iBAAO,QAAQ,KAAK,QAAQ,GAAG,CAAC;AAAA,QACpC;AAEA,YAAI,MAAM,gBAAgB,cAAc,OAAO;AAE/C,YAAI,OAAO,KAAK,eAAe;AAE3B,gBAAM,KAAK,cAAc,KAAkB,GAAG;AAAA,QAClD;AAEA,eAAO,EAAE,KAAU,IAAS;AAAA,MAChC;AAEA,eAAS,oBAAoBA,IAAG;AAC5B,YAAI,UAAU,KAAK,KAAK,kBAAkB,cAAcA,IAAG,IAAI,GAAG,eAAe;AACjF,YAAI,OAAO,OAAO,GAAG;AACjB,cAAI;AACA,gBAAI,MAAM,gBAAgB,cAAc,OAAO;AAAA,UACnD,SAAS,GAAP;AAAA,UAAW;AAEb,cAAI,OAAO,KAAK,eAAe;AAE3B,kBAAM,KAAK,cAAc,KAAkBA,EAAC;AAAA,UAChD;AAEA,cAAI,OAAO,IAAI,MAAM;AACjB,gBAAI,OAAO,IAAI,SAAS,UAAU;AAC9B,kBAAI,YAAY,IAAI,UAAU,mBAAc,IAAI,OAAO,gCAA2B;AAClF,wBAAU,OAAO;AACjB,oBAAM;AAAA,YACV;AACA,gBAAI,IAAI,SAAS,OAAO,IAAI,SAAS,MAAM;AACvC,kBAAI,OAAO;AAAA,YACf;AACA,gBAAI;AACA,kBAAIC,KAAI,eAAe,KAAK,QAAQD,IAAG,IAAI,IAAI,CAAC;AAChD,kBAAIC;AAAG,uBAAOA;AACd,kBAAIC,KAAI,oBAAoB,KAAK,QAAQF,IAAG,IAAI,IAAI,CAAC;AACrD,kBAAIE;AAAG,uBAAOA;AAAA,YAClB,SAAS,GAAP;AAAA,YAAW;AAAA,UACjB;AAAA,QACJ;AAEA,eAAO,eAAe,KAAK,KAAKF,IAAG,QAAQ,CAAC;AAAA,MAChD;AAEA,eAAS,oBAAoBA,IAAG,OAAO;AACnC,YAAI,QAAQ,WAAY;AAAE,iBAAO,qBAAqBA,IAAG,OAAO,IAAI;AAAA,QAAG;AACvE,YAAI,OAAO,kBAAkB,gBAAgBA,IAAG,OAAO,OAAO,IAAI,IAAI,MAAM;AAE5E,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,cAAI,MAAM,KAAK;AACf,cAAI,YAAY,KAAK,QAAQ,GAAG,CAAC,GAAG;AAChC,gBAAIC,KAAI,eAAe,GAAG;AAC1B,gBAAIA;AAAG,qBAAOA;AACd,gBAAIC,KAAI,oBAAoB,GAAG;AAC/B,gBAAIA;AAAG,qBAAOA;AAAA,UAClB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;;;AC/MA;AAAA;AAAA,QAAI,QAAQ;AACZ,UAAM,OAAO;AACb,UAAM,SAAS;AACf,UAAM,OAAO;AAEb,WAAO,UAAU;AAAA;AAAA;",
  "names": ["stack", "getNodeModulesDirs", "Empty", "maybeRealpath", "defaultReadPackage", "getPackageCandidates", "err", "basedir", "pkg", "x", "callback", "cb", "exts", "isdir", "onfile", "require_core", "maybeRealpathSync", "defaultReadPackageSync", "getPackageCandidates", "x", "m", "n"]
}
